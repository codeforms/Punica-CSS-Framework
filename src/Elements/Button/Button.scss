///
/// Punica CSS Framework
/// Elements : Button
///

@use "../../_global/_getters" as *;
@use "../../_global/mixins" as *;
@use "../../_themes/_getters" as *;
@use "../../_themes/_setters" as *;
@use "../../Elements/Typography/variables" as *;
@use "variables" as *;
@use "mixins" as *;

/// if button is enable
@if options('button', 'enable') {
	a.#{class('button', 'name')},
	.#{class('button', 'name')} {
		display: inline-flex;
		font-family: $font-family; // typography > variables
		font-size: variables('button', 'font-size');
		font-weight: theme('elements', 'button', 'font-weight');
		text-decoration: none;
		white-space: nowrap;
		outline: none;
		width: variables('button', 'width');
		background: theme('color', 'background');
		background-image: none;
		@include border();
		appearance: none;
		color: theme('color', 'text');

		/// border radius
		border-radius: if(theme('elements', 'button', 'radius'), theme('elements', 'button', 'radius'), theme('border', 'radius'));

		box-sizing: border-box;
		cursor: pointer;
		line-height: variables('button', 'line-height');
		padding: variables('button', 'padding');
		transition: variables('button', 'transition');
		user-select: none;
		box-shadow: none;
		align-items: center;
		justify-content: center;
		overflow: visible;
		text-align: center;
		&:focus,
		&:hover {
			transition: variables('button', 'transition');
			background-image: none;
		}
		&:hover {
			background: theme('color', 'secondary');
		}
		&:active,
		&:focus {
			background: theme('color', 'background');
		}

		///
		/// GRADIENT
		///
		@if options('button', 'features', 'gradient') {
			&.#{class('button', 'gradient')} {
				@include set-gradient(theme('color', 'background'));
				&:hover {
					@include set-gradient(theme('color', 'background'), to bottom, 25%);
				}
				&:active,
				&:focus {
					background: theme('color', 'background');
					@include set-gradient(theme('color', 'background'), to bottom, 34%);
				}
			}
		}

		&.#{class('button', 'active')} {
			color: theme('color', 'text');
			background: theme('color', 'active');
			background-image: none;
			text-decoration: none;
			&:focus,
			&:hover {
				color: theme('color', 'text');
				background: lighten(theme('color', 'active'), 4%);
			}
		}
        &.#{class('button', 'inactive')} {
			pointer-events: none;
			cursor: default;
			background-image: none;
		}
		// Block Button
		&.#{class('button', 'block')} {
    		display: flex;
		    flex: 1;
		    width: auto;
		}
		i, [class^="#{class('icon', 'class-name')}"] {
			font-size: variables('button', 'icon', 'font-size');
			color: theme('color', 'text');
			text-shadow: none;
		}
		///
		/// STYLES
		///
		@if options('button', 'features', 'styles') {
			@each $theme-name, $theme-color, $border-color in $button-styles {
				&.#{$theme-name} {
					@include button-styles($theme-color, $border-color);
				}
				@if options('button', 'features', 'outlined') {
					&.#{$theme-name}.#{class('button', 'outlined')} {
						@include button-styles($theme-color, $border-color, true);
					}
				}
			}
		}

		// Button Link
		@include link-button();

		///
		/// SIZES
		///
		@if options('button', 'features', 'sizes') {
			@include button-sizes();
		}
		
		///
		/// SECONDARY BUTTON
		///
		@if options('button', 'features', 'secondary') {
			&.#{class('button', 'secondary')} {
				@include secondary-button();
			}
		}
	}
	///
	/// BUTTON GROUPS
	///
	@if options('button', 'features', 'group') {
		@include button-group();
	}
	///
	/// DROPDOWN
	///
	@if options('button', 'features', 'dropdown') {
		@include dropdown();
	}
}
