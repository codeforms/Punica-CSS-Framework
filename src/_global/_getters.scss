/////////////////////////////////////////////////////////
/// GLOBAL GETTER FUNCTIONS
/////////////////////////////////////////////////////////

///
/// Get options value by key
///
/// @param {String} $node
/// @param {String(s)} $keys
///
/// @example options('grid', 'enable')
/// @example options('grid', 'features', 'equal')
///
/// @return boolean
///
@function options($keys...) {
	@if null == map-get($options, nth($keys, 1)) {
		@return debug-message("#{nth($keys, 1)}", 'options');
	}

	$value: map-get($options, nth($keys, 1));

	@if length($keys) == 1 {
		@return $value;
	}

	$value: map-get($value, nth($keys, 2));

	@if null == $value {
		@return debug-message("#{nth($keys, 1)} > #{nth($keys, 2)}", 'options');
	}

	@if length($keys) > 2 {
		$value: map-get($value, nth($keys, 3));
		@if null == $value {
			@return debug-message("#{nth($keys, 1)} > #{nth($keys, 2)} > #{nth($keys, 3)}", 'options');
		}
	}

	@return $value;
}

///
/// Get component/element variables from options
///
/// @param {String} $node
/// @param {String} $key(s)
///
/// @example variables('grid', 'gap')
/// @example variables('grid', 'columns', 'size')
///
/// @return mixed
///
@function variables($node, $keys...) {
	$variables: map-get(map-get(options($node), 'variables'), nth($keys, 1));

	@if null == $variables {
		@return debug-message("#{$node} > #{nth($keys, 1)}", 'options');
	}
	
	@if length($keys) == 1 {
		@return $variables;
	}

	@if null == map-get($variables, nth($keys, 2)) {
		@return debug-message("#{$node} > #{nth($keys, 1)} > #{nth($keys, 2)}", 'options');
	}

	@return map-get($variables, nth($keys, 2));
}

///
/// Get class name
///
/// @param {String} $node
/// @param {String} $key
///
/// @example class('alert', 'name')
/// @example class('button', 'dropdown')
///
/// @return string
///
@function class($node, $key) {
	@if null == map-get($classnames, $node) {
		@return debug-message("#{$node}", 'classnames');
	}

	$classnames: map-get($classnames, $node);

	@if null == map-get($classnames, $key) {
		@return debug-message("#{$node} > #{$key}", 'classnames');
	}

	@return map-get($classnames, $key);
}

/////////////////////////////////////////////////////////
/// Helper Functions
/////////////////////////////////////////////////////////
///
/// Debugging title
/// 
/// @return string
///
@function debug-title() {
	@return '[ INVALID KEY ] :';
}

///
/// Debugging text
///
/// @param {String} $file
/// 
/// @return text
/// 
@function debug-text($file) {
	@return 'key is not found in the #{$file}.scss API file.';
}

/// 
/// Debugging message
/// 
/// @param {Text} $message
/// @param {String} $file
/// 
/// @return text
/// 
@function debug-message($message, $file) {
	$message: debug-title() + ' "#{$message}" ' + debug-text($file);

	@warn $message; @error $message;
}