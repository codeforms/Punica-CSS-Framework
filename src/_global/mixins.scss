/////////////////////////////////////////////////////////
/// GLOBAL MIXINS
/////////////////////////////////////////////////////////

///
/// Breakpoints
/// @param {Size} $size
/// @param {Size} $width
///
@mixin breakpoints(
	$size, $width: 'min-width'
) {
	@media only screen and ($width: $size) {
		@content;
	}
}

///
/// Get options value by key
///
/// @param {String} $node
/// @param {Strings} $keys
///
/// @example options('layout', 'grid', 'enable')
/// @example options('layout', 'grid', 'features', 'equal')
///
/// @return boolean
///
@function options($node, $keys...) {
	$options: map-get($options, $node);
	$value: map-get(map-get($options, nth($keys, 1)), nth($keys, 2));

	@if length($keys) > 2 {
		$value: map-get($value, nth($keys, 3));
	}

	@return $value;
}

///
/// Media Group Specs
/// @param {String} $item-name
/// @param {Size} $padding
///
@mixin media-group-specs(
	$item-name, $padding: 1px
) {
	@each $name, $number in $grids {
		&>.#{$item-name}.#{$name} {
			padding-bottom: initial !important;
			height: auto;
			&>div, &>a {
				flex: 0 0 calc(100% * (1 / #{$number}));
				flex-grow: 1;
				padding: $padding;
			}
		}
	}
}

///
/// Reference;
/// https://css-tricks.com/fluid-width-video/
///
@mixin embedded-media {
	position: relative;
	padding-bottom: 56.25% !important;
	height: 0;
	overflow: hidden;
	max-width: 100%;
    width: 100%;
    box-sizing: border-box;
	iframe,
	object,
	embed {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
	video {
		max-width: 100%;
		height: auto;
		box-sizing: border-box;
	}
}