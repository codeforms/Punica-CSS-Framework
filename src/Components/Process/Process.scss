/////////////////////////////////////////////////////////
/// PUNICA CSS > COMPONENTS : PROCESS
/////////////////////////////////////////////////////////
@import "mixins";
///
/// if process is enable
///
@if options('process', 'enable') {
	.#{class('process', 'name')} {
		display: flex;
		flex-wrap: nowrap;
		margin: variables('process', 'margin');
		width: 100%;
		list-style: none;
		.#{class('process', 'item')} {
			flex: 1 1 0;
			min-height: variables('process', 'min-height');
			position: relative;
			align-items: center;
			justify-content: center;
			display: flex;
			word-break: break-word;
			line-height: 1.3;
			text-align: center;
			&:not(:first-child)::before {
				background: theme('color', 'primary');
				content: "";
				height: variables('process', 'stepbar', 'height');
				left: -50%;
				position: absolute;
				top: 0;
				width: 100%;
			}
			a {
				color: theme('color', 'text');
				display: inline-block;
				padding: 10px 10px 0;
				text-decoration: none;
				font-weight: bold;
				&::before {
					position: absolute;
					content: "";
					background: theme('color', 'primary');
					top: 0;
					left: 50%;
					height: variables('process', 'stickbar', 'height');
					width: variables('process', 'stickbar', 'width');
					z-index: 1;
				}
				&:first-child::before {
					left: calc(50% - (#{variables('process', 'stickbar', 'width')} - 1px));
				}
			}
			&.#{class('process', 'active')} {
				a {
					color: theme('color', 'primary');
					font-weight: theme('typography', 'header-weight');
					&::after {
						content: "#{variables('icon', 'process', 'current')}"; // [*]
						font-family: "#{variables('icon', 'font-family')}"; // [*]
						position: absolute;
						top: calc(-15px - #{variables('process', 'icon-size')});
						left: calc(50% - ((#{variables('process', 'stickbar', 'width')} * 10) / 2));
						color: theme('color', 'primary');
						font-size: variables('process', 'icon-size');
					}
				}
				&~.#{class('process', 'item')} {
					&::before {
						background: theme('border', 'color');
					}
					a {
						color: theme('color', 'text');
						&:hover {
							color: theme('color', 'primary');
						}
						&::before {
							background: theme('border', 'color');
						}
					}
				}
			}
		}
		///
		/// STYLES
		///
		@if options('process', 'features', 'styles') {
			@each $type, $bg-color in $process-styles {
				&.#{$type} {
					@include process-styles($bg-color);
				}
			}
		}
		///
		/// VERTICAL PROCESS
		///
		@if options('process', 'features', 'vertical') {
			&.#{class('process', 'vertical')} {
				@include process-vertical();
			}
		}

		// vertical style is setted as "true" for mobile devices
		@include breakpoints(variables('grid', 'breakpoints', 'medium'), 'max-width') {
			@include process-vertical();
		}
	}
}
/*
REFERENCES ******************************************
[*] Defined at options.scss file -> 'icon'
https://material.io/resources/icons/
*****************************************************/