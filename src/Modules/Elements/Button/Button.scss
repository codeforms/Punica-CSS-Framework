///
/// Punica CSS Framework
/// Elements : Button
///

@use "../../../Core/Global/Getters" as *;
@use "../../../Core/Global/Options" as *;
@use "../../../Core/Global/Sass" as *;
@use "../../../Core/Global/Mixins" as *;
@use "../../../Core/Global/Colors" as color;
@use "mixins" as *;

@if enabled('elements', 'button') {
	a.#{class('button', 'name')},
	.#{class('button', 'name')} {
		display         : elements('button', 'display');
		align-items     : elements('button', 'align-items');
		justify-content : elements('button', 'justify-content');
		font-family     : elements('button', 'font-family');
		font-size       : elements('button', 'font-size');
		font-weight     : elements('button', 'font-weight');
		line-height     : elements('button', 'line-height');
		text-align      : elements('button', 'text-align');
		text-decoration : elements('button', 'text-decoration');
		white-space     : elements('button', 'white-space');
		color           : elements('button', 'color');
		background      : elements('button', 'background');
		background-image: elements('button', 'background-image');
		outline         : elements('button', 'outline');
		width           : elements('button', 'width');
		padding         : elements('button', 'padding');
		transition      : elements('button', 'transition');
		appearance      : elements('button', 'appearance');
		cursor          : elements('button', 'cursor');
		border          : elements('button', 'border');
		border-radius   : elements('button', 'border-radius');
		user-select     : elements('button', 'user-select');
		box-shadow      : elements('button', 'box-shadow');
		overflow        : elements('button', 'overflow');
		box-sizing      : border-box;
		&:focus,
		&:hover {
			transition      : elements('button', 'transition');
			background-image: none;
		}
		&:hover {
			background: color.$grey;
		}
		&:active,
		&:focus {
			background: elements('button', 'background');
		}
		&.#{class('button', 'active')} {
			color           : elements('button', 'color');
			background      : color.$grey;
			background-image: none;
			text-decoration : none;
			&:focus,
			&:hover {
				background: lighten(color.$grey, 5%);
			}
		}
        &.#{class('button', 'inactive')} {
			pointer-events  : none;
			cursor          : default;
			background-image: none;
		}
		// Block Button
		&.#{class('button', 'block')} {
			display: flex;
			flex   : 1;
			width  : auto;
		}
		i {
			font-size  : elements('button', 'icon', 'font-size');
			color      : elements('button', 'color');
			text-shadow: none;
		}
		///
		/// STYLES
		///
		@if features('elements', 'button', 'styles') {
			@each $theme-name, $theme-color, $border-color in elements('button', 'styles') {
				&.#{$theme-name} {
					@include button-styles($theme-color, $border-color);
				}
				@if features('elements', 'button', 'outlined') {
					&.#{$theme-name}.#{class('button', 'outlined')} {
						@include button-styles($theme-color, $border-color, true);
					}
				}
			}
		}
		///
		/// SIZES
		///
		@if features('elements', 'button', 'sizes') {
			@include button-sizes();
		}
	}
	///
	/// BUTTON GROUPS
	///
	@if features('elements', 'button', 'group') {
		@include button-group();
	}
	///
	/// DROPDOWN
	///
	@if features('elements', 'button', 'dropdown') {
		@include dropdown();
	}
}
