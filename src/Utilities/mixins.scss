/***************************************************** 
PUNICA CSS > UTILITIES : HELPERS > MIXINS ************/

/**
 *	
 */
@mixin setHelperListWithRange(
	$helpers, $range, $value-type: null, $specificity: null
) {
	@each $class, $property in $helpers {
		@each $value in $range {
			.#{$class}#{$value} {
				@include setProperties($property, $value, $value-type, $specificity);
			}
		}
	}
}

/**
 *	
 */
@mixin setHelperList(
	$list, $property-name: null, $specificity: null
) {
	@if $property-name {
		@each $class, $value in $list {
			.#{$class} {
				@include setProperties($property-name, $value, null, $specificity);
			}
		}
	} @else {
		@each $class, $property, $value in $list {
			.#{$class} {
				@include setProperties($property, $value, null, $specificity);
			}
		}
	}
}

/**
 *	
 */
@mixin setNestedHelperList($list) {
	@each $class-name, $values in $list {
		@each $value in $values {
			.#{$class-name}-#{$value} {
				@include setProperties($class-name, $value);
			}
		}
	}
}

/**
 *	
 */
@mixin setProperties(
	$property, $value, $value-type: null, $specificity: null
) {
	#{$property}: #{$value}#{$value-type} #{$specificity};
}

/**
 *	
 */
@mixin customBackgrounds() {
	.bg-grid {
	    height: 100%;
		background-color: $main-bg;
	    background-position: center center;
		background-image: linear-gradient(90deg, lighten($primary-color, 25%) 1%, transparent 16%),
		linear-gradient(lighten($primary-color, 25%) 1%, transparent 16%);
		background-size: 10px 10px;
	}
	.bg-stripe {
	    height: 100%;
		background-image: linear-gradient($main-bg, $main-bg 7px, $primary-color 4px, darken($main-bg, 14%));
	    background-size: 100% 8px;
	}
}

/**
 *	
 */
@mixin otherHelpers() {
	.centered {margin: 0 auto;}
	.align.right {text-align: right !important;}
	.align.left {text-align: left !important;}
	.align.center {text-align: center !important;}
	.align.justify {text-align: justify !important;}
	.float.right {float: right;}
	.float.left {float: left;}
	.full.width {
		width: 100%;
		max-width: 100%;
		min-width: 100%;
	}
	.full.height {
		height: 100%;
		min-height: 100%;
		max-height: 100%;
	}
	.fade {opacity: 0;}
	.hide {display: none;}
	/* seperator for flex */
	.spacer {
		flex-grow: 1!important;
		outline: none;
	}
	.avatar {
	    display: inline-block;
	    border-radius: 50%;
	}
	.reset {
		padding: 0 !important;
		margin : 0 !important;
	}
	.reverse {
		-webkit-transform:rotateY(180deg);
		-moz-transform:rotateY(180deg);
		-o-transform:rotateY(180deg);
		-ms-transform:rotateY(180deg);
		unicode-bidi:bidi-override;
		direction:rtl;
	}
	.truncate {
		display: block;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}
	.transparent {background: transparent !important;}
	.pure, .pure > div {background: transparent; border: none; box-shadow: none}
	.bordered {border: $main-border-width $main-border-style $main-border-color !important;}
	.borderless {border: none !important;}
	.rounded {border-radius: $main-border-radius;}
	.radiusless {border-radius:0 !important;}
	.shadowed {@include shadow();}
	.shadowless {box-shadow:none !important;}
	.inset-0 {
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}
	.inset-auto {
		top: auto;
		right: auto;
		bottom: auto;
		left: auto;
	}
}